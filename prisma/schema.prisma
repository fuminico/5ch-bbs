generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Board {
  id          Uuid     @id @default(dbgenerated("gen_random_uuid()"))
  slug        String   @unique
  title       String
  description String?
  activityAt  DateTime @map("activity_at") @default(now())
  createdAt   DateTime @map("created_at") @default(now())
  updatedAt   DateTime @map("updated_at") @updatedAt

  threads Thread[]

  @@map("boards")
}

model Thread {
  id           Uuid     @id @default(dbgenerated("gen_random_uuid()"))
  boardId      Uuid     @map("board_id")
  title        String
  body         String
  authorName   String   @map("author_name")
  authorTrip   String?  @map("author_trip")
  authorEmail  String?  @map("author_email")
  lastBumpedAt DateTime @map("last_bumped_at") @default(now())
  createdAt    DateTime @map("created_at") @default(now())
  updatedAt    DateTime @map("updated_at") @updatedAt

  board Board @relation(fields: [boardId], references: [id])
  posts Post[]

  @@index([boardId, lastBumpedAt])
  @@map("threads")
}

model Post {
  id        Uuid     @id @default(dbgenerated("gen_random_uuid()"))
  threadId  Uuid     @map("thread_id")
  no        Int
  name     String
  trip     String?
  email    String?
  body      String
  dayId     String   @map("day_id")
  ipHash    String   @map("ip_hash")
  uaHash    String   @map("ua_hash")
  wasSaged  Boolean  @map("was_saged") @default(false)
  createdAt DateTime @map("created_at") @default(now())

  thread Thread @relation(fields: [threadId], references: [id])

  @@unique([threadId, no])
  @@index([threadId, createdAt])
  @@map("posts")
}
